#summary Library for operating multiple Java applications started in separate JVM
#labels Featured

<wiki:toc/>

= Introduction =

!RemoteApplications library is used for launching Java applications in a separate process and taking [http://robotframework.org Robot Framework] (RF) libraries into use to operate on them. This is useful when application does something that cannot be tested with RF when running inside the same JVM. Such cases are when System.exit is called in the SUT, when multiple applications running in separate JVMs need to be tested in parallel or when application is started using Java Web Start. RemoteApplications replaces ApplicationLauncher library, which is needed only if you are using Java version 1.4. 

= Documentation =

The full library documentation by release is found below:
  * [http://robotframework-javatools.googlecode.com/svn/jvmconnector/tags/jvmconnector-1.1/doc/RemoteApplications.html 1.1 Version ]
  * [http://robotframework-javatools.googlecode.com/svn/jvmconnector/trunk/doc/RemoteApplications.html Development Version ]

= Examples =

Examples contains examples of testing standalone and Java Web Start application.

== Prerequisites for Running the Examples ==
 * You'll need java, javaws and jybot in the path.
 * Download the [http://robotframework-javatools.googlecode.com/files/remote_applications_example-1.1.zip remote_applications_example.zip]
 * Unzip it and open command line to example directory

== Running Standalone Example ==
 * Run `run.py standalone_application.tsv`

== Running Java Web Start Example ==
 * Configure Java Web Start proxy settings if necessary.
 * [http://robotframework-javatools.googlecode.com/svn/examples/javaws-demo/demo/lib/test-application.jnlp Start the application] manually and agree with the confirmation dialog if necessary. 
 * If you are using Java 1.5, test libraries needs to be inserted to jvmconnector.jar. That can be done by running command `jar ufm lib\jvmconnector-1.1-jar-with-dependencies.jar lib\manifest.txt` from command line. See [http://robotframework-javatools.googlecode.com/svn/jvmconnector/trunk/doc/RemoteApplications.html library documentation] for more details.
 * Last, run `run.py javaws_application.tsv`

The Java Web Start test applications sources can be found from [http://robotframework-javatools.googlecode.com/svn/examples/javaws-demo/ here].

= Usage =

Download !RemoteApplications-version.py from [http://code.google.com/p/robotframework-javatools/downloads/list the download page] and rename it as !RemoteApplications.py. It depends on jvmconnector which can be downloaded from the same page. See [http://robotframework.googlecode.com/svn/tags/robotframework-2.1/doc/userguide/RobotFrameworkUserGuide.html#taking-test-libraries-into-use RF UserGuide] or examples above on how to take it into use. Jvmconnector needs to be added to CLASSPATH before starting RF.

= Troubleshooting =

Best way to start trouble shooting is to run the above examples. In case those work, then environment variables, Java version and Java Web Start proxy settings should not be the problem.


== Application Does Not Start ==

*Cause:* The command starting the application is wrong

*Solution:* By adding "2 > error.txt" at the end of the command you get possible errors to error.txt which is located on the directory where tests are executed. Based on the error, you need to fix the command.

*Cause:* There are spaces in the program that should be started

*Solution:* This is known issue in RemoteApplications, see issue 36 for more details and workarounds.

*Cause:* Proxy settings are incorrect with Java Web Start

*Solution:* Run command "javaws -viewer" and modify the proxy settings.


== Application Hangs ==

*Cause:* `_JAVA_OPTIONS` environment variable have settings that affect JVM e.g. Quick Test Pro (QTP) related settings.

*Solution:* Remove the `_JAVA_OPTIONS` environment variable or set it empty in test data.


== Test Execution Hangs ==

*Cause:* Multiple Java processes are started with one command and RemoteApplications library accesses wrong JVM

*Debugging:* See that there are no urls in launched.txt after the connection to the application is created and/or monitor the started processes when running the tests e.g. with [https://visualvm.dev.java.net/ visualvm] tool

*Solution 1:* Change the command to start only one process


== Connection Cannot Be Established to the Application ==

*Problem:* Could not connect to application XXX

*Cause:* Testing capabilies are not started when the application is started

*Debugging:* Check is there URL in launched.txt (see file location from [http://robotframework-javatools.googlecode.com/svn/jvmconnector/trunk/doc/RemoteApplications.html library documentation]).

*Solution 1:* Remove the file and rerun the test cases. If problem persist, see solutions below.

*Solution 2:* In case you are using Robot agent, see that -javaagent has proper values (see details from [http://robotframework-javatools.googlecode.com/svn/jvmconnector/trunk/doc/RemoteApplications.html library documentation]). Add "2 > error.txt" to end of the command you are using to start your application and you should see message "Picked up JAVA_TOOL_OPTIONS: -javaagent:/path/to/jvmconnector.jar=/path/to/lib/" in the error.txt if everything goes fine. If not, there should be reason for the failure.

*Solution 3:* In case you are using "Start Application" keyword and application is started, please submit an issue.


== Library Cannot Be Taken Into Use ==

*Problem:* Take Librar(y/ies) Into Use" keyword fails for !ClassNotFoundException 

*Cause:* The library is not available on the application's JVM

*Solution 1:* Check that you are giving correct directory to "Start Application" keyword's lib_dir argument

*Solution 2:* In case you are starting the application without using Remote Applications, check that you are giving correct path to the Robot Agent (see details from [http://robotframework-javatools.googlecode.com/svn/jvmconnector/trunk/doc/RemoteApplications.html library documentation]).

*Solution 3:* When using Java 1.5, check that you have included test library jars to the jvm_connector jar. See NOTE at the end of the [http://robotframework-javatools.googlecode.com/svn/jvmconnector/trunk/doc/RemoteApplications.html library documentation] for the details how to insert test libraries to jvmconnector.jar.