*** Setting ***
library	OperatingSystem
library	PythonpathHelper.py
library	ApplicationLauncher	${app}	WITH NAME	xLauncher
library	ApplicationLauncher	${app}	WITH NAME	yLauncher
library	ApplicationLauncher	${app}	WITH NAME	zLauncher
library	ApplicationLauncher	${app}	WITH NAME	externalXLauncher

*** Variable ***
${app}	org.robotframework.jvmconnector.mocks.MyApplication
${testingLibrary}	org.robotframework.jvmconnector.keyword.JvmconnectorKeywords
${appLauncherScript}	${CURDIR}${/}..${/}src${/}main${/}python${/}ApplicationLauncher.py

*** Keyword ***
startExternalApplicationX
	startExternalApplicationAndImportLibraries	externalX	externalX

startExternalApplicationY
	startExternalApplicationAndImportLibraries	y	externalY

startApplicationX
	startApplicationAndImportLibraries	x	x

startApplicationY
	startApplicationAndImportLibraries	y	y

startApplicationZ
	startApplicationAndImportLibraries	z	z

correctApplicationShouldBeInUse	[arguments]	${expectedName}
	@{arguments}=	getArguments	
	shouldBeEqual	${expectedName}	@{arguments}

selectApplication	[arguments]	${name}
	setLibrarySearchOrder	${name}Launcher	${testingLibrary}${name}	JavaTools${name}

closeApplications	[arguments]	@{names}
	:FOR	${name}	IN	@{names}
		setLibrarySearchOrder	${name}Launcher
		closeApplication

startApplicationAndImportLibraries	[arguments]	${name}	${arguments}	${jvmArguments}=
	setLibrarySearchOrder	${name}Launcher
	startApplication	${arguments}	${jvmArguments}
	importRemoteLibraries	${name}

startExternalApplicationAndImportLibraries	[arguments]	${name}	${arguments}	${jvmArguments}=
	setLibrarySearchOrder	${name}Launcher
	${pythonPath}=	getPythonPath
	startProcess	jython -Dpython.path=${pythonPath} ${jvmArguments} ${appLauncherScript} ${app} ${arguments}
	applicationStarted
	importRemoteLibraries	${name}

importRemoteLibraries	[arguments]	${name}
	importRemoteLibrary	${testingLibrary}	WITH NAME	${testingLibrary}${name}
	importRemoteLibrary	JavaTools	WITH NAME	JavaTools${name}
