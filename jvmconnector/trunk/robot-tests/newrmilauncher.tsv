* Setting *	* Value *
library	rmilauncher.RmiLauncher	${app}	WITH NAME	myAppLauncher
library	rmilauncher.RmiLauncher	${app}	1sec	WITH NAME	launcherWithTimeout

*Variable*	*Value*
${app}	org.robotframework.jvmconnector.mocks.MyApplication
${remoteLib}	org.robotframework.jvmconnector.keyword.JvmconnectorKeywords

* Test Case *	* Action *	* Argument *
Starts Application And Imports Remote Library
	myAppLauncher.startApplication
	myAppLauncher.importRemoteLibrary	${remoteLib}	WITH NAME	myApp
	applicationShouldBeRunning
	stopApplication
	applicationShouldNotBeRunning

#Importing Remote Library Uses Timeouts
	#${expectedErrorMessage}=	Importing ${remoteLib} timed out.
	#shouldFailInOneSecond	${expectedErrorMessage}	importRemoteLibrary ${remoteLib}	1sec	WITH NAME	myLib

#TODO: parallel testing:
#- use WITH NAMEs
#- assert JVMs are different?

*Keyword*	*Action*	*Argument*	*Argument*
applicationShouldBeRunning
	${appIsRunning}=	myApp.applicationIsRunning
	shouldBeTrue	${appIsRunning}

applicationShouldNotBeRunning
	${appIsRunning}=	myApp.applicationIsRunning
	shouldNotBeTrue	${appIsRunning}

shouldFailInOneSecond	[arguments]	${expectedErrorMsg}	${keyword}	@{arguments}
	${startTime}=	getTime	epoch
	runKeywordAndExpectError	${expectedErrorMsg}	${keyword}	@{arguments}
	${endTime}=	getTime	epoch
	${runTime}=	evaluate	${endTime} - ${startTime}
	shouldBeEqualAsIntegers	1	${runTime}
